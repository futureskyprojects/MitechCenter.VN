// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MitechCenter.vn.Models;

namespace MitechCenter.vn.Migrations
{
    [DbContext(typeof(MitechCenterContext))]
    partial class MitechCenterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MitechCenter.vn.Models.AboutUs", b =>
                {
                    b.Property<int>("auId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("auContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("auTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("uId")
                        .HasColumnType("int");

                    b.Property<DateTime>("updateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("auId");

                    b.HasIndex("auId")
                        .HasName("FK_AboutUs_Id_Index");

                    b.HasIndex("uId");

                    b.ToTable("AboutUs");
                });

            modelBuilder.Entity("MitechCenter.vn.Models.Course", b =>
                {
                    b.Property<int>("cId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cLearningTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("cPrice")
                        .HasColumnType("real");

                    b.Property<string>("cSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("tId")
                        .HasColumnType("int");

                    b.Property<DateTime>("updateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("cId");

                    b.HasIndex("cId")
                        .HasName("FK_Course_Id_Index");

                    b.HasIndex("tId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("MitechCenter.vn.Models.Feedback", b =>
                {
                    b.Property<int>("fId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("fAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fFullname")
                        .HasColumnType("int");

                    b.Property<string>("fPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fReplyByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("updateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("fId");

                    b.HasIndex("fId")
                        .HasName("FK_Feedback_Id_Index");

                    b.HasIndex("fReplyByUserId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("MitechCenter.vn.Models.News", b =>
                {
                    b.Property<int>("nId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("nContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nFeatureImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ncId")
                        .HasColumnType("int");

                    b.Property<int>("uId")
                        .HasColumnType("int");

                    b.Property<DateTime>("updateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("nId");

                    b.HasIndex("nId")
                        .HasName("FK_News_Id_Index");

                    b.HasIndex("ncId");

                    b.HasIndex("uId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("MitechCenter.vn.Models.NewsCategory", b =>
                {
                    b.Property<int>("ncId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("ncDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ncName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("ncId");

                    b.HasIndex("ncId")
                        .HasName("FK_NewsCategory_Id_Index");

                    b.ToTable("NewsCategory");
                });

            modelBuilder.Entity("MitechCenter.vn.Models.StaticElement", b =>
                {
                    b.Property<int>("eId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("eData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("eId");

                    b.HasIndex("eId")
                        .HasName("FK_ElementTbl_Id_Index");

                    b.ToTable("StaticElement");
                });

            modelBuilder.Entity("MitechCenter.vn.Models.Teacher", b =>
                {
                    b.Property<int>("tId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("createAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("tAvatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("tId");

                    b.HasIndex("tId")
                        .HasName("FK_Teacher_Id_Index");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("MitechCenter.vn.Models.User", b =>
                {
                    b.Property<int>("uId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("displayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("encryptPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.Property<DateTime>("updateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("uId");

                    b.HasIndex("uId")
                        .HasName("FK_User_Id_Index");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MitechCenter.vn.Models.AboutUs", b =>
                {
                    b.HasOne("MitechCenter.vn.Models.User", "User")
                        .WithMany("AboutUs")
                        .HasForeignKey("uId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MitechCenter.vn.Models.Course", b =>
                {
                    b.HasOne("MitechCenter.vn.Models.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("tId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MitechCenter.vn.Models.Feedback", b =>
                {
                    b.HasOne("MitechCenter.vn.Models.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("fReplyByUserId");
                });

            modelBuilder.Entity("MitechCenter.vn.Models.News", b =>
                {
                    b.HasOne("MitechCenter.vn.Models.NewsCategory", "NewsCategory")
                        .WithMany("News")
                        .HasForeignKey("ncId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MitechCenter.vn.Models.User", "User")
                        .WithMany("News")
                        .HasForeignKey("uId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
